apiVersion: vertexai.gcp.upbound.io/v1beta1
kind: Endpoint
metadata:
  annotations:
    meta.upbound.io/example-id: vertexai/v1beta1/endpoint
  labels:
    testing.upbound.io/example-name: endpoint
  name: endpoint
spec:
  forProvider:
    description: A sample vertex endpoint
    displayName: sample-endpoint
    labels:
      label-one: value-one
    location: us-central1
    network: projects/990150596479/global/networks/vertex-network
#
#---
#
#apiVersion: compute.gcp.upbound.io/v1beta1
#kind: GlobalAddress
#metadata:
#  annotations:
#    meta.upbound.io/example-id: vertexai/v1beta1/endpoint
#  labels:
#    testing.upbound.io/example-name: vertex-range
#  name: vertex-range
#spec:
#  forProvider:
#    addressType: INTERNAL
#    networkSelector:
#      matchLabels:
#        testing.upbound.io/example-name: google_compute_network
#    prefixLength: 24
#    purpose: VPC_PEERING
#
#---
#
#apiVersion: servicenetworking.gcp.upbound.io/v1beta1
#kind: Connection
#metadata:
#  annotations:
#    meta.upbound.io/example-id: vertexai/v1beta1/endpoint
#  labels:
#    testing.upbound.io/example-name: vertex_vpc_connection
#  name: vertex-vpc-connection
#spec:
#  forProvider:
#    networkSelector:
#      matchLabels:
#        testing.upbound.io/example-name: google_compute_network
#    reservedPeeringRangesRefs:
#    - name: vertex-range
#    service: servicenetworking.googleapis.com
#
#---
#
#apiVersion: compute.gcp.upbound.io/v1beta1
#kind: Network
#metadata:
#  annotations:
#    meta.upbound.io/example-id: vertexai/v1beta1/endpoint
#  labels:
#    testing.upbound.io/example-name: google_compute_network
#  name: vertex-network
#spec:
#  forProvider:
#    autoCreateSubnetworks: false
