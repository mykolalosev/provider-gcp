---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: indices.vertexai.gcp.upbound.io
spec:
  group: vertexai.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Index
    listKind: IndexList
    plural: indices
    singular: index
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Index is the Schema for the Indexs API. A representation of a
          collection of database items organized in a way that allows for approximate
          nearest neighbor (a.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IndexSpec defines the desired state of Index
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: The description of the Index.
                    type: string
                  displayName:
                    description: The display name of the Index. The name can be up
                      to 128 characters long and can consist of any UTF-8 characters.
                    type: string
                  indexUpdateMethod:
                    description: The update method to use with this Index. The value
                      must be the followings. If not set, BATCH_UPDATE will be used
                      by default.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The labels with user-defined metadata to organize
                      your Indexes.
                    type: object
                  metadata:
                    description: An additional information about the Index Structure
                      is documented below.
                    items:
                      properties:
                        config:
                          description: The configuration of the Matching Engine Index.
                            Structure is documented below.
                          items:
                            properties:
                              algorithmConfig:
                                description: The configuration with regard to the
                                  algorithms used for efficient search. Structure
                                  is documented below.
                                items:
                                  properties:
                                    bruteForceConfig:
                                      description: Configuration options for using
                                        brute force search, which simply implements
                                        the standard linear search in the database
                                        for each query.
                                      items:
                                        type: object
                                      type: array
                                    treeAhConfig:
                                      description: 'Configuration options for using
                                        the tree-AH algorithm (Shallow tree + Asymmetric
                                        Hashing). Please refer to this paper for more
                                        details: https://arxiv.org/abs/1908.10396
                                        Structure is documented below.'
                                      items:
                                        properties:
                                          leafNodeEmbeddingCount:
                                            description: Number of embeddings on each
                                              leaf node. The default value is 1000
                                              if not set.
                                            type: number
                                          leafNodesToSearchPercent:
                                            description: The default percentage of
                                              leaf nodes that any query may be searched.
                                              Must be in range 1-100, inclusive. The
                                              default value is 10 (means 10%) if not
                                              set.
                                            type: number
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              approximateNeighborsCount:
                                description: The default number of neighbors to find
                                  via approximate search before exact reordering is
                                  performed. Exact reordering is a procedure where
                                  results returned by an approximate search algorithm
                                  are reordered via a more expensive distance computation.
                                  Required if tree-AH algorithm is used.
                                type: number
                              dimensions:
                                description: The number of dimensions of the input
                                  vectors.
                                type: number
                              distanceMeasureType:
                                description: 'The distance measure used in nearest
                                  neighbor search. The value must be one of the followings:'
                                type: string
                              featureNormType:
                                description: 'Type of normalization to be carried
                                  out on each vector. The value must be one of the
                                  followings:'
                                type: string
                            required:
                            - dimensions
                            type: object
                          type: array
                        contentsDeltaUri:
                          description: Allows inserting, updating  or deleting the
                            contents of the Matching Engine Index. The string must
                            be a valid Cloud Storage directory path. If this field
                            is set when calling IndexService.UpdateIndex, then no
                            other Index field can be also updated as part of the same
                            call. The expected structure and format of the files this
                            URI points to is described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format
                          type: string
                        isCompleteOverwrite:
                          description: If this field is set together with contentsDeltaUri
                            when calling IndexService.UpdateIndex, then existing content
                            of the Index will be replaced by the data from the contentsDeltaUri.
                          type: boolean
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: The region of the index. eg us-central1
                    type: string
                required:
                - displayName
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IndexStatus defines the observed state of Index.
            properties:
              atProvider:
                properties:
                  createTime:
                    description: The timestamp of when the Index was created in RFC3339
                      UTC "Zulu" format, with nanosecond resolution and up to nine
                      fractional digits.
                    type: string
                  deployedIndexes:
                    description: The pointers to DeployedIndexes created from this
                      Index. An Index can be only deleted if all its DeployedIndexes
                      had been undeployed first. Structure is documented below.
                    items:
                      properties:
                        deployedIndexId:
                          description: The ID of the DeployedIndex in the above IndexEndpoint.
                          type: string
                        indexEndpoint:
                          description: A resource name of the IndexEndpoint.
                          type: string
                      type: object
                    type: array
                  etag:
                    description: Used to perform consistent read-modify-write updates.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/locations/{{region}}/indexes/{{name}}
                    type: string
                  indexStats:
                    description: Stats of the index resource. Structure is documented
                      below.
                    items:
                      properties:
                        shardsCount:
                          description: The number of shards in the Index.
                          type: number
                        vectorsCount:
                          description: The number of vectors in the Index.
                          type: string
                      type: object
                    type: array
                  metadataSchemaUri:
                    description: Points to a YAML file stored on Google Cloud Storage
                      describing additional information about the Index, that is specific
                      to it. Unset if the Index does not have any additional information.
                    type: string
                  name:
                    description: The resource name of the Index.
                    type: string
                  updateTime:
                    description: The timestamp of when the Index was last updated
                      in RFC3339 UTC "Zulu" format, with nanosecond resolution and
                      up to nine fractional digits.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
